#!/usr/bin/env python
import socket
import argparse
from concurrent.futures import ThreadPoolExecutor
from colorama import Fore,Back,init,Style

print(Fore.BLUE+"""              
 ______ ______ ______    
/\  ___/\__  _/\  ___\   
\ \  __\/_/\ \\ \  __\   
 \ \_____\\ \_\\ \_____\ 
  \/_____/ \/_/ \/_____/ 
                                                                 
"""+Style.RESET_ALL)


print(Fore.RED+"[!]"+Style.RESET_ALL+" Lütfen sadece yetkinizin olduğu sistemleri tarayın."+Style.RESET_ALL)
print(Fore.YELLOW+"[?]"+Style.RESET_ALL+" Nasıl gidiyor dostum iyimisin?"+Style.RESET_ALL)
print(Fore.GREEN+"[©]"+Style.RESET_ALL+" by erdemskywalker"+Style.RESET_ALL)

full_ports=""

for i in range(65000):
    full_ports+=str(i)+","
full_ports+="65000"

top_20 = "21,22,23,25,53,80,110,111,135,139,143,443,445,993,995,1723,3306,3389,5900,8080"

def scanner(ip, port):
    try:
        scan = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        scan.settimeout(2)
        result = scan.connect_ex((ip, port))

        if result == 0:
            print(""+Fore.GREEN+" OPEN      "+Style.RESET_ALL+f"   {port}")
        

    except socket.error as err:
        print(f"Socket error on port {port}: {err}")
    finally:
        scan.close()

def first(ports, target,time):
    excut = ports.split(",")
    with ThreadPoolExecutor(max_workers=int(time)) as executor:  
        futures = [executor.submit(scanner, target, int(port)) for port in excut]
        for future in futures:
            future.result()  

def main():
    parser = argparse.ArgumentParser(description="SCANNER...")
    parser.add_argument("-i", "--ip", required=True, help="IP Adresi")
    parser.add_argument("-p", "--ports", help="Portları ',' koyarak giriniz", default=full_ports)
    parser.add_argument("-t", "--time", help="eş zamanlılık", default=1)
    args = parser.parse_args()
    first(args.ports, args.ip,args.time)

if __name__ == "__main__":
    main()
